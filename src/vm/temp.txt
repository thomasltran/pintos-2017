Copying tests/vm/page-merge-mm to scratch partition...
Copying tests/vm/child-qsort-mm to scratch partition...
qemu -drive file=/tmp/z9zLzocWfq.dsk,format=raw,index=0,media=disk -m 4 -smp 8 -net none -nographic -monitor null
c[?7l[2J[0mSeaBIOS (version rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org)
Booting from Hard Disk...
PPiiLLoo  hhddaa1
1
LLooaaddiinngg.........................................
Kernel command line: -q -f extract run page-merge-mm
CPU 0 is up
Pintos booting with 3,968 kB RAM...
PCI Device 0:0.0 (8086,1237): Intel - 82441FX (PCI Host) IRQ 0
PCI Device 0:1.0 (8086,7000): Intel - 82371SB_ISA (PCI-ISA Bridge) IRQ 0
PCI Device 0:1.1 (8086,7010): Intel - 82371SB_IDE (Unknown Type) IRQ 0
PCI Device 0:1.3 (8086,7113): Intel - 82371AB/EB/MB_ACPI (Unknown Type) IRQ 9
PCI Device 0:2.0 (1234,1111): Unknown Vendor - Unknown Device (VGA Controller) IRQ 0
Calibrating timer...  81,664,000 loops/s.
Initializing EHCI
Initializing UHCI
ide0: unexpected interrupt
hda: 13,104 sectors (6 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 345 sectors (172 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 193 sectors (96 kB), Pintos scratch (22)
hda4: 8,192 sectors (4 MB), Pintos swap (23)
filesys: using hda2
scratch: using hda3
swap: using hda4
Formatting file system...done.
CPU 1 is up
CPU 2 is up
CPU 3 is up
CPU 4 is up
CPU 5 is up
CPU 6 is up
CPU 7 is up
Started 7 additional CPUs.
Boot complete.
Extracting ustar archive from hda3 into file system...
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Erasing ustar archive...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
(page-merge-mm) sort chunk 1
(page-merge-mm) sort chunk 2
(page-merge-mm) sort chunk 3
(page-merge-mm) sort chunk 4
fault addr 0x1001a000 fesp 0xbffffef4 thread esp 0 page status 0
Kernel PANIC from CPU 1 at ../../userprog/exception.c:240 in page_fault(): assertion `temp_frame != NULL' failed.
Call stack: 0xc0033043 0xc00330fd 0xc00377f4 0xc0022a94 0xc0022e92 0x80481d1 0x80482df 0x80483cd 0x8048161 0x8048a5b.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.

Printing a backtrace of all CPUs
Call stack: 0xc0033043Printing a backtrace of all threads
 0xc0025b87 0xc0022a94Call stack of thread 'initial' (status BLOCKED, CPU6): 0xc0022e92 0xc00222e5 0xc0021d6b 0xc0021895 0xc0021e3f 0xc0023dc4.
 0xc0035bfbCall stack: 0xc0033043 0xc0020eaf 0xc0025b87 0xc0020f8e 0xc0022a94 0xc00205dd 0xc0022e92.
 0xc0021d6bCall stack of thread 'idle_cpu0' (status RUNNING, CPU0): 0xc0021e3fthread appears currently running on another CPU, skipping.
.
Call stack of thread 'idle_cpu1' (status BLOCKED, CPU1):Call stack: 0xc0033043 0xc00222e5 0xc0025b87 0xc0021895 0xc0022a94 0xc0021d66 0xc0022e92 0xc0021e3f 0xc0021d6b.
 0xc0021e3fCall stack of thread 'idle_cpu2' (status RUNNING, CPU2):.
thread appears currently running on another CPU, skipping.
Call stack: 0xc0033043Call stack of thread 'idle_cpu3' (status RUNNING, CPU3): 0xc0025b87thread appears currently running on another CPU, skipping.
 0xc0022a94Call stack of thread 'idle_cpu4' (status RUNNING, CPU4): 0xc0022e92thread appears currently running on another CPU, skipping.
 0xc0021d6bCall stack of thread 'idle_cpu5' (status RUNNING, CPU5): 0xc0021e3fthread appears currently running on another CPU, skipping.
.
Call stack of thread 'idle_cpu6' (status RUNNING, CPU6):Call stack: 0xc0033043thread appears currently running on another CPU, skipping.
 0xc0025b87Call stack of thread 'idle_cpu7' (status RUNNING, CPU7): 0xc0022a94thread appears currently running on another CPU, skipping.
 0xc0022e92Call stack of thread 'page-merge-mm' (status BLOCKED, CPU6): 0xc0021d6b 0xc00222e5 0xc0021e3f 0xc0021895.
 0xc0023dc4Call stack: 0xc0033043 0xc0035883 0xc0025b87 0xc0038cd6 0xc0022a94 0xc0022a94 0xc0022e92 0xc0022e92 0xc0021d6b 0x804ad53 0xc0021e3f.
.
Call stack of thread 'child-qsort-mm ' (status RUNNING, CPU1):Call stack: 0xc0033043 0xc0021cec 0xc0025b87 0xc00332f4 0xc0022a94 0xc0033138 0xc0022e92 0xc00377f4 0xc0021d6b 0xc0022a94 0xc0021e3f 0xc0022e92.
 0x80481d1 0x80482df 0x80483cd 0x8048161 0x8048a5b.
Call stack of thread 'child-qsort-mm ' (status BLOCKED, CPU0): 0xc00222e5 0xc0021895 0xc0023dc4 0xc00240e1 0xc0037bdf 0xc0037ff5 0xc0022a94 0xc0022e92 0x804aa12.
Call stack of thread 'child-qsort-mm ' (status BLOCKED, CPU2): 0xc00222e5 0xc0021895 0xc0023dc4 0xc00240e1 0xc003c86b 0xc003c35c 0xc0037874 0xc0022a94 0xc0022e92 0x80482a8 0x80483cd 0x8048161 0x8048a5b.
Call stack of thread 'child-qsort-mm ' (status BLOCKED, CPU4): 0xc00222e5 0xc0021895 0xc0023dc4 0xc00240e1 0xc003c86b 0xc003c35c 0xc0037874 0xc0022a94 0xc0022e92 0x8048354 0x20000 0x64b3435eKernel PANIC recursion at ../../threads/thread.c:761 in schedule().
